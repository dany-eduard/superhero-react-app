{"version":3,"sources":["components/Loader/Loader.tsx","services/index.ts","components/Inputs/Input.tsx","store/slices/superHeroes/index.ts","store/index.ts","components/Navbar/Navbar.tsx","components/Layout/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Loader","className","role","ApiUrl","process","ApiKey","setHeroes","resSuccess","dispatch","data","map","item","value","pushHerotoList","fetchSearchHero","params","a","setLoading","axios","get","res","results","resetList","Error","fetchHeroes","requets","id","Promise","allSettled","resSucces","filter","status","Input","autoComplete","divClass","_uniqueId","onChange","placeholder","readOnly","resProps","type","defaultProps","PropTypes","string","bool","object","superHeroesSlice","createSlice","name","initialState","hero","list","index","loading","reducers","setHero","state","action","payload","push","setIndex","incrementIndex","resetIndex","decrementIndex","actions","store","configureStore","reducer","superHeroes","Navbar","useDispatch","navigate","useNavigate","path","useLocation","pathname","useState","undefined","searchValue","setSearchValue","useEffect","to","onSubmit","e","preventDefault","target","Layout","children","Apariencia","lazy","Dashboard","Habilidades","NotFound","ResultadoBusqueda","App","fallback","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kKAQeA,EARA,kBACb,qBAAKC,UAAU,qCAAf,SACE,qBAAKA,UAAU,iBAAiBC,KAAK,SAArC,SACE,sBAAMD,UAAU,kBAAhB,8B,uHCCAE,EAASC,oCACTC,EAASD,mBAITE,EAAY,SAACC,EAAmBC,GACpC,IAAMC,EAAOF,EAAWG,KAAI,SAACC,GAAD,OAAUA,EAAKC,MAAMH,QACjDD,EAASK,YAAeJ,KAiBbK,EAAkB,SAACC,GAAD,8CAAoB,WAAOP,GAAP,iBAAAQ,EAAA,6DACjDR,EAASS,aAAW,IAD6B,kBAG7BC,IAAMC,IAAN,UAAahB,GAAb,OAAsBE,EAAtB,mBAAuCU,IAHV,OAGzCK,EAHyC,OAIzCX,EAAOW,EAAIX,KAAKY,SAAW,GACjCb,EAASc,eACTd,EAASK,YAAeJ,IANuB,wDAQzC,IAAIc,MAAJ,MARyC,yBAU/Cf,EAASS,aAAW,IAV2B,6EAApB,uDAchBO,IA5BK,SAACT,GAAD,8CAAsB,WAAOP,GAAP,mBAAAQ,EAAA,6DACxCR,EAASS,aAAW,IACdQ,EAAUV,EAAOL,KAAI,SAACgB,GAAD,OAAQR,IAAMC,IAAN,UAAahB,GAAb,OAAsBE,EAAtB,YAAgCqB,OAF3B,kBAIpBC,QAAQC,WAAWH,GAJC,OAIhCL,EAJgC,OAKhCS,EAA0BT,EAZgBU,QAAO,SAACnB,GAAD,MAA+B,cAAhBA,EAAKoB,UAa3EzB,EAAUuB,EAAWrB,GANiB,wDAQhC,IAAIe,MAAJ,MARgC,yBAUtCf,EAASS,aAAW,IAVkB,6EAAtB,wD,sHCIde,EAAQ,SAAC,GAAD,QACZC,oBADY,MACG,MADH,MAEZhC,iBAFY,MAEA,GAFA,MAGZiC,gBAHY,MAGD,GAHC,MAIZR,UAJY,MAIPS,IAAU,eAJH,EAKZC,EALY,EAKZA,SALY,IAMZC,mBANY,MAME,GANF,MAOZC,gBAPY,aAQZC,gBARY,MAQD,GARC,MASZC,YATY,MASL,OATK,EAUZ5B,EAVY,EAUZA,MAVY,OAYZ,qBAAKX,UAAS,sBAAiBiC,GAA/B,SACE,mCACED,aAAcA,EACdhC,UAAS,4BAAuBA,GAChCyB,GAAIA,EACJc,KAAMA,EACN5B,MAAOA,EACP0B,SAAUA,EACVD,YAAaA,EACbD,SAAUA,GACNG,OAUVP,EAAMS,aAAe,CACnBR,aAAcS,IAAUC,OACxB1C,UAAWyC,IAAUC,OACrBT,SAAUQ,IAAUC,OACpBjB,GAAIgB,IAAUC,OACdN,YAAaK,IAAUC,OACvBL,SAAUI,IAAUE,KACpBL,SAAUG,IAAUG,OACpBL,KAAME,IAAUC,QAGHX,S,yJC5CFc,EAAmBC,YAAY,CAC1CC,KAAM,cACNC,aATgC,CAChCC,KAAM,GACNC,KAAM,GACNC,MAAO,EACPC,SAAS,GAMTC,SAAU,CACRC,QAAS,SAACC,EAAOC,GACfD,EAAMN,KAAOO,EAAOC,SAEtB7C,eAAgB,SAAC2C,EAAOC,GAAY,IAAD,GACjC,EAAAD,EAAML,MAAKQ,KAAX,oBAAmBF,EAAOC,WAE5BpC,UAAW,SAACkC,GACVA,EAAML,KAAO,IAEfS,SAAU,SAACJ,EAAOC,GAChBD,EAAMJ,MAAQK,EAAOC,SAEvBG,eAAgB,SAACL,GACfA,EAAMJ,OAAS,GAEjBU,WAAY,SAACN,GACXA,EAAMJ,MAAQ,GAEhBW,eAAgB,SAACP,GACfA,EAAMJ,OAAS,GAEjBnC,WAAY,SAACuC,EAAOC,GAClBD,EAAMH,QAAUI,EAAOC,YAKtB,EAAqFZ,EAAiBkB,QAArFnD,GAAjB,EAAQ0C,QAAR,EAAiB1C,gBAAgBS,EAAjC,EAAiCA,UAAqCL,GAAtE,EAA4C4C,eAA5C,EAA4DD,SAA5D,EAAsE3C,YAC9D6B,MAAf,S,gHC7CamB,EAAQC,YAAe,CAClCC,QAAS,CACPC,mB,qDCuEWC,EArEA,WACb,IAAM7D,EAAW8D,cACXC,EAAWC,cACXC,EAAOC,cAAcC,SAC3B,EAAsCC,wBAA6BC,GAAnE,mBAAOC,EAAP,KAAoBC,EAApB,KAiBA,OAJAC,qBAAU,WACRD,EAAe,MACd,CAACN,IAGF,qBAAKxE,UAAU,iDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAS,uBAA2B,yBAATwE,GAAmC,UAAYQ,GAAG,uBAAnF,oBAGA,wBACEhF,UAAU,iBACVuC,KAAK,SACL,iBAAe,WACf,iBAAe,uBACf,gBAAc,sBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMvC,UAAU,0BAElB,sBAAKA,UAAU,2BAA2ByB,GAAG,sBAA7C,UACE,qBAAIzB,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAS,mBAAuB,iBAATwE,GAA2B,UAAYQ,GAAG,eAAvE,2BAIF,oBAAIhF,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAS,mBAAuB,gBAATwE,GAA0B,UAAYQ,GAAG,cAAtE,6BAKJ,uBAAMhF,UAAU,SAASiF,SAzCR,SAACC,GACxBA,EAAEC,iBACFb,EAAS,sBAAD,OAAuBO,IAC/BtE,EAASc,eACLwD,GAAatE,EAASM,YAAgBgE,KAqCpC,UACE,cAAC,IAAD,CACE7C,aAAa,MACbP,GAAG,eACHU,SAjDS,SAAC+C,GACpBJ,EAAeI,EAAEE,OAAOzE,QAiDdyB,YAAY,kBACZzB,MAAOkE,IAET,wBAAQ7E,UAAU,wBAAwBuC,KAAK,SAA/C,gCCrDG8C,EAPA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,gCACE,cAAC,EAAD,IACA,+BAAOA,Q,QCLLC,EAAaC,gBAAK,kBAAM,uDACxBC,EAAYD,gBAAK,kBAAM,iCACvBE,EAAcF,gBAAK,kBAAM,uDACzBG,EAAWH,gBAAK,kBAAM,iCACtBI,EAAoBJ,gBAAK,kBAAM,iCAkBtBK,EAhBH,kBACV,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,WAAD,CAAUC,SAAU,cAAC/F,EAAA,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyE,KAAK,IAAIuB,QAAS,cAACJ,EAAD,MACzB,cAAC,IAAD,CAAOnB,KAAK,cAAcuB,QAAS,cAACR,EAAD,MACnC,cAAC,IAAD,CAAOf,KAAK,eAAeuB,QAAS,cAACL,EAAD,MACpC,cAAC,IAAD,CAAOlB,KAAK,sBAAsBuB,QAAS,cAACH,EAAD,MAC3C,cAAC,IAAD,CAAOpB,KAAK,uBAAuBuB,QAAS,cAACN,EAAD,gBCNvCO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU3C,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ4C,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.39f48a20.chunk.js","sourcesContent":["const Loader = () => (\n  <div className=\"mt-4 d-flex justify-content-center\">\n    <div className=\"spinner-border\" role=\"status\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </div>\n  </div>\n)\n\nexport default Loader\n","/* eslint-disable no-unused-vars */\nimport axios from 'axios'\nimport { pushHerotoList, resetList, setLoading } from 'store/slices/superHeroes'\n\nconst ApiUrl = process.env.REACT_APP_API_URL\nconst ApiKey = process.env.REACT_APP_API_KEY\n\nconst filterSuccess = (response: any[]) => response.filter((item: any) => item.status === 'fulfilled')\n\nconst setHeroes = (resSuccess: any[], dispatch: Function) => {\n  const data = resSuccess.map((item) => item.value.data)\n  dispatch(pushHerotoList(data))\n}\n\nconst fetchHeroes = (params: number[]) => async (dispatch: Function) => {\n  dispatch(setLoading(true))\n  const requets = params.map((id) => axios.get(`${ApiUrl}${ApiKey}/${id}`))\n  try {\n    const res = await Promise.allSettled(requets)\n    const resSucces = filterSuccess(res)\n    setHeroes(resSucces, dispatch)\n  } catch (error) {\n    throw new Error(error as string)\n  } finally {\n    dispatch(setLoading(false))\n  }\n}\n\nexport const fetchSearchHero = (params: string) => async (dispatch: Function) => {\n  dispatch(setLoading(true))\n  try {\n    const res = await axios.get(`${ApiUrl}${ApiKey}/search/${params}`)\n    const data = res.data.results || []\n    dispatch(resetList())\n    dispatch(pushHerotoList(data))\n  } catch (error) {\n    throw new Error(error as string)\n  } finally {\n    dispatch(setLoading(false))\n  }\n}\n\nexport default fetchHeroes\n","/* eslint-disable no-unused-vars */\nimport _uniqueId from 'lodash/uniqueId'\nimport { ChangeEvent } from 'react'\nimport PropTypes from 'prop-types'\n\ninterface InputProps {\n  autoComplete?: 'off' | 'on'\n  className?: string\n  divClass?: string\n  id?: string\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n  readOnly?: boolean\n  resProps?: any\n  type?: string\n  value: string | number | null | undefined\n}\n\nconst Input = ({\n  autoComplete = 'off',\n  className = '',\n  divClass = '',\n  id = _uniqueId('html-input-'),\n  onChange,\n  placeholder = '',\n  readOnly = false,\n  resProps = {},\n  type = 'text',\n  value,\n}: InputProps) => (\n  <div className={`input-group ${divClass}`}>\n    <input\n      autoComplete={autoComplete}\n      className={`form-control me-2 ${className}`}\n      id={id}\n      type={type}\n      value={value}\n      readOnly={readOnly}\n      placeholder={placeholder}\n      onChange={onChange}\n      {...resProps}\n    />\n  </div>\n)\n\nInput.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes['string' || 'number'].isRequired,\n}\n\nInput.defaultProps = {\n  autoComplete: PropTypes.string,\n  className: PropTypes.string,\n  divClass: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  readOnly: PropTypes.bool,\n  resProps: PropTypes.object,\n  type: PropTypes.string,\n}\n\nexport default Input\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\n\nexport interface superHeroes {\n  hero: any\n  list: any[]\n  index: number // Ultimo ID\n  loading: boolean\n}\n\nconst initialState: superHeroes = {\n  hero: {},\n  list: [],\n  index: 1,\n  loading: false,\n}\n\nexport const superHeroesSlice = createSlice({\n  name: 'superHeroes',\n  initialState,\n  reducers: {\n    setHero: (state, action) => {\n      state.hero = action.payload\n    },\n    pushHerotoList: (state, action) => {\n      state.list.push(...action.payload)\n    },\n    resetList: (state) => {\n      state.list = []\n    },\n    setIndex: (state, action) => {\n      state.index = action.payload\n    },\n    incrementIndex: (state) => {\n      state.index += 1\n    },\n    resetIndex: (state) => {\n      state.index = 1\n    },\n    decrementIndex: (state) => {\n      state.index -= 1\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload\n    },\n  },\n})\n\nexport const { setHero, pushHerotoList, resetList, incrementIndex, setIndex, setLoading } = superHeroesSlice.actions\nexport default superHeroesSlice.reducer\n","/* eslint-disable import/no-named-as-default */\nimport { configureStore } from '@reduxjs/toolkit'\nimport superHeroes from './slices/superHeroes'\n\nexport const store = configureStore({\n  reducer: {\n    superHeroes\n  },\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n","import { Input } from 'components/Inputs'\nimport { ChangeEvent, FormEvent, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useLocation, useNavigate } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { fetchSearchHero } from 'services'\nimport { resetList } from 'store/slices/superHeroes'\n\nconst Navbar = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const path = useLocation().pathname\n  const [searchValue, setSearchValue] = useState<string | undefined>(undefined)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value)\n  }\n\n  const handleFormSearch = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    navigate(`resultado-busqueda?${searchValue}`)\n    dispatch(resetList())\n    if (searchValue) dispatch(fetchSearchHero(searchValue))\n  }\n\n  useEffect(() => {\n    setSearchValue('')\n  }, [path])\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <div className=\"container-fluid\">\n        <Link className={`navbar-brand ${path === '/superhero-react-app' && 'active'}`} to=\"/superhero-react-app\">\n          Inicio\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarTogglerDemo01\"\n          aria-controls=\"navbarTogglerDemo01\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className={`nav-link ${path === '/habilidades' && 'active'}`} to=\"/habilidades\">\n                Habilidades\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className={`nav-link ${path === '/apariencia' && 'active'}`} to=\"/apariencia\">\n                Apariencia\n              </Link>\n            </li>\n          </ul>\n          <form className=\"d-flex\" onSubmit={handleFormSearch}>\n            <Input\n              autoComplete=\"off\"\n              id=\"input-search\"\n              onChange={handleChange}\n              placeholder=\"Buscar un heroe\"\n              value={searchValue}\n            />\n            <button className=\"btn btn-outline-light\" type=\"submit\">\n              Buscar\n            </button>\n          </form>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import Navbar from 'components/Navbar'\nimport { ReactNode } from 'react'\n\ninterface LayoutPorps {\n  children: ReactNode\n}\n\nconst Layout = ({ children }: LayoutPorps) => (\n  <div>\n    <Navbar />\n    <main>{children}</main>\n  </div>\n)\n\nexport default Layout\n","import { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport { Suspense, lazy } from 'react'\nimport Layout from 'components/Layout'\nimport Loader from 'components/Loader'\n\nconst Apariencia = lazy(() => import('pages/Apariencia'))\nconst Dashboard = lazy(() => import('pages/Dashboard'))\nconst Habilidades = lazy(() => import('pages/Habilidades'))\nconst NotFound = lazy(() => import('pages/NotFound'))\nconst ResultadoBusqueda = lazy(() => import('pages/ResultadoBusqueda'))\n\nconst App = () => (\n  <BrowserRouter>\n    <Layout>\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"*\" element={<NotFound />} />\n          <Route path=\"/apariencia\" element={<Apariencia />} />\n          <Route path=\"/habilidades\" element={<Habilidades />} />\n          <Route path=\"/resultado-busqueda\" element={<ResultadoBusqueda />} />\n          <Route path=\"/superhero-react-app\" element={<Dashboard />} />\n        </Routes>\n      </Suspense>\n    </Layout>\n  </BrowserRouter>\n)\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport { store } from 'store'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}