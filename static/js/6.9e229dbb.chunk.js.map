{"version":3,"sources":["pages/ResultadoBusqueda/ResultadoBusqueda.tsx","components/CardHero/ProgressBar.tsx","components/CardHero/CardHero.tsx","services/index.ts"],"names":["ResultadoBusqueda","dispatch","useDispatch","navigate","useNavigate","heroesList","useSelector","state","superHeroes","list","loading","useState","searchValue","setSearchValue","useEffect","value","document","querySelector","fetchSearchHero","resetList","className","onSubmit","e","preventDefault","autoComplete","id","onChange","target","placeholder","type","disabled","Loader","length","map","hero","CardHero","name","powerstats","fullName","biography","alignment","appearance","image","ProgressBar","progress","title","ariaMax","role","style","width","defaultProps","index","props","src","url","alt","Number","combat","durability","intelligence","power","speed","strength","ApiUrl","process","ApiKey","setHeroes","resSuccess","data","item","pushHerotoList","params","a","setLoading","axios","get","res","results","Error","fetchHeroes","requets","Promise","allSettled","resSucces","filter","status"],"mappings":"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","file":"static/js/6.9e229dbb.chunk.js","sourcesContent":["/* eslint-disable no-nested-ternary */\nimport { ChangeEvent, FormEvent, useEffect, useState } from 'react'\nimport { fetchSearchHero } from 'services'\nimport { Input } from 'components/Inputs'\nimport { resetList } from 'store/slices/superHeroes'\nimport { RootState } from 'store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router'\nimport CardHero from 'components/CardHero'\nimport Loader from 'components/Loader'\n\nconst ResultadoBusqueda = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const heroesList = useSelector((state: RootState) => state.superHeroes.list)\n  const loading = useSelector((state: RootState) => state.superHeroes.loading)\n  const [searchValue, setSearchValue] = useState<string | null>(null)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value)\n  }\n\n  const handleFormSearch = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    navigate(`?${searchValue}`)\n    dispatch(resetList())\n    if (searchValue) {\n      dispatch(fetchSearchHero(searchValue))\n    }\n  }\n\n  useEffect(() => {\n    const { value } = document.querySelector('#input-search') as HTMLInputElement\n    if (value && value !== '') dispatch(fetchSearchHero(value))\n    setSearchValue(value)\n    return () => {\n      dispatch(resetList())\n    }\n  }, [])\n\n  return (\n    <div className=\"custom-container\">\n      <form className=\"mb-4 d-flex\" onSubmit={handleFormSearch}>\n        <Input\n          autoComplete=\"off\"\n          id=\"input-search\"\n          onChange={handleChange}\n          placeholder=\"Buscar un heroe\"\n          value={searchValue}\n        />\n        <button className=\"btn btn-primary\" type=\"submit\" disabled={loading}>\n          Buscar\n        </button>\n      </form>\n\n      {loading ? (\n        <Loader />\n      ) : heroesList.length > 0 ? (\n        <>\n          <h2>\n            Resultado para: <code>{searchValue}</code>\n          </h2>\n          <div className=\"mt-5 mb-3\">\n            <div className=\"row\">\n              {heroesList.map((hero) => (\n                <div className=\"col-md-4\" key={hero.id}>\n                  <CardHero\n                    name={hero.name}\n                    powerstats={hero.powerstats}\n                    fullName={hero.biography[`full-name`]}\n                    alignment={hero.biography.alignment}\n                    appearance={hero.appearance}\n                    image={hero.image}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        </>\n      ) : (\n        <h3>No hay resultados para mostrar.</h3>\n      )}\n    </div>\n  )\n}\n\nexport default ResultadoBusqueda\n","import PropTypes from 'prop-types'\n\ninterface ProgressBarProps {\n  progress: number\n  title?: string\n  ariaMax?: number\n}\n\nconst ProgressBar = ({ progress, title, ariaMax }: ProgressBarProps) => (\n  <div className=\"progress mt-1\">\n    <div\n      className=\"progress-bar\"\n      role=\"progressbar\"\n      style={{ width: `${progress}%` }}\n      aria-valuenow={progress}\n      aria-valuemin={0}\n      aria-valuemax={ariaMax}\n    >\n      {`${progress}% ${title}`}\n    </div>\n  </div>\n)\n\nProgressBar.propTypes = {\n  progress: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  ariaMax: PropTypes.number,\n}\n\nProgressBar.defaultProps = {\n  title: '',\n  ariaMax: 100,\n}\n\nexport default ProgressBar\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { Appearance, Image, Powerstats } from 'interfaces/Hero.interface'\nimport ProgressBar from './ProgressBar'\n\ninterface CardProps {\n  name: string\n  powerstats: Powerstats\n  fullName: string\n  alignment: string\n  appearance: Appearance | any\n  image: Image\n}\n\nconst index = (props: CardProps) => {\n  const { name, powerstats, fullName, alignment, /* appearance, */ image } = props\n  return (\n    <div className=\"card p-3 mb-2\">\n      <div className=\"d-flex justify-content-between\">\n        <div className=\"d-flex flex-row align-items-center\">\n          <div className=\"avatar\">\n            <img className=\"img-fluid\" src={image.url} alt={`${name}.profile`} />\n          </div>\n          <div className=\"ms-2 c-details\">\n            <h6 className=\"mb-0\">{name}</h6> <span>{fullName}</span>\n          </div>\n        </div>\n        <div className={`alignment-container fst-italic ${alignment === 'good' ? 'text-success' : 'text-warning'}`}>\n          {' '}\n          <span>{alignment}</span>{' '}\n        </div>\n      </div>\n      <div>\n        <div className=\"mt-3\">\n          <span>Combate:</span> <ProgressBar progress={Number(powerstats.combat) || 0} />\n          <span>Durabilidad:</span> <ProgressBar progress={Number(powerstats.durability) || 0} ariaMax={80} />\n          <span>Inteligencia:</span> <ProgressBar progress={Number(powerstats.intelligence) || 0} ariaMax={80} />\n          <span>Poder:</span> <ProgressBar progress={Number(powerstats.power) || 0} ariaMax={80} />\n          <span>Velocidad:</span> <ProgressBar progress={Number(powerstats.speed) || 0} ariaMax={80} />\n          <span>Fuerza:</span> <ProgressBar progress={Number(powerstats.strength) || 0} ariaMax={80} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default index\n","/* eslint-disable no-unused-vars */\nimport axios from 'axios'\nimport { pushHerotoList, resetList, setLoading } from 'store/slices/superHeroes'\n\nconst ApiUrl = process.env.REACT_APP_API_URL\nconst ApiKey = process.env.REACT_APP_API_KEY\n\nconst filterSuccess = (response: any[]) => response.filter((item: any) => item.status === 'fulfilled')\n\nconst setHeroes = (resSuccess: any[], dispatch: Function) => {\n  const data = resSuccess.map((item) => item.value.data)\n  dispatch(pushHerotoList(data))\n}\n\nconst fetchHeroes = (params: number[]) => async (dispatch: Function) => {\n  dispatch(setLoading(true))\n  const requets = params.map((id) => axios.get(`${ApiUrl}${ApiKey}/${id}`))\n  try {\n    const res = await Promise.allSettled(requets)\n    const resSucces = filterSuccess(res)\n    setHeroes(resSucces, dispatch)\n  } catch (error) {\n    throw new Error(error as string)\n  } finally {\n    dispatch(setLoading(false))\n  }\n}\n\nexport const fetchSearchHero = (params: string) => async (dispatch: Function) => {\n  dispatch(setLoading(true))\n  try {\n    const res = await axios.get(`${ApiUrl}${ApiKey}/search/${params}`)\n    const data = res.data.results || []\n    dispatch(resetList())\n    dispatch(pushHerotoList(data))\n  } catch (error) {\n    throw new Error(error as string)\n  } finally {\n    dispatch(setLoading(false))\n  }\n}\n\nexport default fetchHeroes\n"],"sourceRoot":""}