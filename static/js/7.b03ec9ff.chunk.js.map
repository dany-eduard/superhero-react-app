{"version":3,"sources":["pages/ResultadoBusqueda/ResultadoBusqueda.tsx","components/CardHero/ProgressBar.tsx","components/CardHero/CardHero.tsx"],"names":["ResultadoBusqueda","dispatch","useDispatch","navigate","useNavigate","search","useLocation","heroesList","useSelector","state","superHeroes","list","loading","useState","searchValue","setSearchValue","useEffect","value","document","querySelector","fetchSearchHero","resetList","className","onSubmit","e","preventDefault","autoComplete","id","onChange","target","placeholder","type","disabled","Loader","length","replace","map","hero","CardHero","name","powerstats","fullName","biography","alignment","appearance","image","showPowerStats","showAppearance","ProgressBar","progress","title","ariaMax","role","style","width","defaultProps","index","props","src","url","alt","Number","combat","durability","intelligence","power","speed","strength","gender","race","height","weight"],"mappings":"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","file":"static/js/7.b03ec9ff.chunk.js","sourcesContent":["/* eslint-disable no-nested-ternary */\nimport { ChangeEvent, FormEvent, useEffect, useState } from 'react'\nimport { fetchSearchHero } from 'services'\nimport { Input } from 'components/Inputs'\nimport { resetList } from 'store/slices/superHeroes'\nimport { RootState } from 'store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLocation, useNavigate } from 'react-router'\nimport CardHero from 'components/CardHero'\nimport Loader from 'components/Loader'\n\nconst ResultadoBusqueda = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const { search } = useLocation()\n  const heroesList = useSelector((state: RootState) => state.superHeroes.list)\n  const loading = useSelector((state: RootState) => state.superHeroes.loading)\n  const [searchValue, setSearchValue] = useState<string | null>(null)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value)\n  }\n\n  const handleFormSearch = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    navigate(`?${searchValue}`)\n    dispatch(resetList())\n    if (searchValue) {\n      dispatch(fetchSearchHero(searchValue))\n    }\n  }\n\n  useEffect(() => {\n    const { value } = document.querySelector('#input-search') as HTMLInputElement\n    if (value && value !== '') dispatch(fetchSearchHero(value))\n    setSearchValue(value)\n    return () => {\n      dispatch(resetList())\n    }\n  }, [])\n\n  return (\n    <div className=\"custom-container\">\n      <form className=\"mb-4 d-flex\" onSubmit={handleFormSearch}>\n        <Input\n          autoComplete=\"off\"\n          id=\"input-search\"\n          onChange={handleChange}\n          placeholder=\"Buscar un heroe\"\n          value={searchValue}\n        />\n        <button className=\"btn btn-primary\" type=\"submit\" disabled={loading}>\n          Buscar\n        </button>\n      </form>\n\n      {loading ? (\n        <Loader />\n      ) : heroesList.length > 0 ? (\n        <>\n          <h2>\n            Resultado para: <code>{search.replace(/[^a-zA-Z ]/g, ' ')}</code>\n          </h2>\n          <div className=\"mt-5 mb-3\">\n            <div className=\"row\">\n              {heroesList.map((hero) => (\n                <div className=\"col-md-4\" key={hero.id}>\n                  <CardHero\n                    name={hero.name}\n                    powerstats={hero.powerstats}\n                    fullName={hero.biography[`full-name`]}\n                    alignment={hero.biography.alignment}\n                    appearance={hero.appearance}\n                    image={hero.image}\n                    showPowerStats\n                    showAppearance\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        </>\n      ) : (\n        <h3>No hay resultados para mostrar.</h3>\n      )}\n    </div>\n  )\n}\n\nexport default ResultadoBusqueda\n","import PropTypes from 'prop-types'\n\ninterface ProgressBarProps {\n  progress: number\n  title?: string\n  ariaMax?: number\n}\n\nconst ProgressBar = ({ progress, title, ariaMax }: ProgressBarProps) => (\n  <div className=\"progress mt-1\">\n    <div\n      className=\"progress-bar\"\n      role=\"progressbar\"\n      style={{ width: `${progress}%` }}\n      aria-valuenow={progress}\n      aria-valuemin={0}\n      aria-valuemax={ariaMax}\n    >\n      {`${progress}% ${title}`}\n    </div>\n  </div>\n)\n\nProgressBar.propTypes = {\n  progress: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  ariaMax: PropTypes.number,\n}\n\nProgressBar.defaultProps = {\n  title: '',\n  ariaMax: 100,\n}\n\nexport default ProgressBar\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { Appearance, Image, Powerstats } from 'interfaces/Hero.interface'\nimport ProgressBar from './ProgressBar'\n\ninterface CardProps {\n  alignment: string\n  appearance: Appearance | any\n  fullName: string\n  image: Image\n  name: string\n  powerstats: Powerstats\n  showAppearance?: boolean\n  showPowerStats?: boolean\n}\n\nconst index = (props: CardProps) => {\n  const {\n    alignment,\n    appearance,\n    fullName,\n    image,\n    name,\n    powerstats,\n    showAppearance = false,\n    showPowerStats = false,\n  } = props\n  return (\n    <div className=\"card p-3 mb-2\">\n      <div className=\"d-flex justify-content-between\">\n        <div className=\"d-flex flex-row align-items-center\">\n          <div className=\"avatar\">\n            <img className=\"img-fluid\" src={image.url} alt={`${name}.profile`} />\n          </div>\n          <div className=\"ms-2 c-details\">\n            <h6 className=\"mb-0\">{name}</h6> <span>{fullName}</span>\n          </div>\n        </div>\n        <div className={`alignment-container fst-italic ${alignment === 'good' ? 'text-success' : 'text-warning'}`}>\n          {' '}\n          <span>{alignment}</span>{' '}\n        </div>\n      </div>\n      {showPowerStats && (\n        <div>\n          <div className=\"mt-3\">\n            <span>Combate:</span> <ProgressBar progress={Number(powerstats.combat) || 0} />\n            <span>Durabilidad:</span> <ProgressBar progress={Number(powerstats.durability) || 0} ariaMax={80} />\n            <span>Inteligencia:</span> <ProgressBar progress={Number(powerstats.intelligence) || 0} ariaMax={80} />\n            <span>Poder:</span> <ProgressBar progress={Number(powerstats.power) || 0} ariaMax={80} />\n            <span>Velocidad:</span> <ProgressBar progress={Number(powerstats.speed) || 0} ariaMax={80} />\n            <span>Fuerza:</span> <ProgressBar progress={Number(powerstats.strength) || 0} ariaMax={80} />\n          </div>\n        </div>\n      )}\n      {showAppearance && (\n        <div className=\"mt-3\">\n          <hr />\n          <h5 className=\"text-primary\">Apariencia</h5>\n          <table className=\"table table-sm\">\n            <tbody>\n              <tr>\n                <td className=\"fst-italic\">Genero</td>\n                <td className=\"fw-light\">{appearance.gender}</td>\n              </tr>\n              <tr>\n                <td className=\"fst-italic\">Raza</td>\n                <td className=\"fw-light\">{appearance.race}</td>\n              </tr>\n              <tr>\n                <td className=\"fst-italic\">Altura</td>\n                <td className=\"fw-light\">{appearance.height[1]}</td>\n              </tr>\n              <tr>\n                <td className=\"fst-italic\">Peso</td>\n                <td className=\"fw-light\">{appearance.weight[1]}</td>\n              </tr>\n              <tr>\n                <td className=\"fst-italic\">Color de ojos</td>\n                <td className=\"fw-light\">{appearance['eye-color']}</td>\n              </tr>\n              <tr>\n                <td className=\"fst-italic\">Color de pelo</td>\n                <td className=\"fw-light\">{appearance['hair-color']}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default index\n"],"sourceRoot":""}