{"version":3,"sources":["pages/Dashboard/Dashboard.tsx","components/CardHero/ProgressBar.tsx","components/CardHero/CardHero.tsx"],"names":["Dashboard","dispatch","useDispatch","heroesList","useSelector","state","superHeroes","list","loading","lastId","length","id","getIdArray","idArray","i","push","getHeroes","a","fetchHeroes","useEffect","window","onscroll","document","documentElement","scrollHeight","scrollTop","clientHeight","className","map","hero","CardHero","name","powerstats","fullName","biography","alignment","appearance","image","showPowerStats","Loader","ProgressBar","progress","title","ariaMax","role","style","width","defaultProps","index","props","showAppearance","src","url","alt","Number","combat","durability","intelligence","power","speed","strength","gender","race","height","weight"],"mappings":"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","file":"static/js/6.834cd476.chunk.js","sourcesContent":["import { RootState } from 'store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport CardHero from 'components/CardHero'\nimport fetchHeroes from 'services'\nimport Loader from 'components/Loader'\n\nconst Dashboard = () => {\n  const dispatch = useDispatch()\n  const heroesList = useSelector((state: RootState) => state.superHeroes.list)\n  const loading = useSelector((state: RootState) => state.superHeroes.loading)\n  const lastId = +(heroesList[heroesList.length - 1]?.id ?? 0)\n\n  const getIdArray = () => {\n    const idArray = []\n    for (let i = lastId; i < lastId + 10; i += 1) {\n      idArray.push(i + 1)\n    }\n    return idArray\n  }\n\n  const getHeroes = async () => {\n    dispatch(fetchHeroes(getIdArray()))\n  }\n\n  useEffect(() => {\n    dispatch(fetchHeroes(getIdArray()))\n    return () => {}\n  }, [])\n\n  useEffect(() => {\n    window.onscroll = () => {\n      if (\n        document.documentElement.scrollHeight - document.documentElement.scrollTop ===\n        document.documentElement.clientHeight\n      ) {\n        if (!loading) getHeroes()\n      }\n    }\n    return () => {\n      window.onscroll = null\n    }\n  }, [loading])\n\n  return (\n    <div className=\"custom-container\">\n      <div className=\"mt-5 mb-3\">\n        <div className=\"row\">\n          {heroesList.map((hero) => (\n            <div className=\"col-md-4\" key={hero.id}>\n              <CardHero\n                name={hero.name}\n                powerstats={hero.powerstats}\n                fullName={hero.biography[`full-name`]}\n                alignment={hero.biography.alignment}\n                appearance={hero.appearance}\n                image={hero.image}\n                showPowerStats\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      {loading && <Loader />}\n    </div>\n  )\n}\n\nexport default Dashboard\n","import PropTypes from 'prop-types'\n\ninterface ProgressBarProps {\n  progress: number\n  title?: string\n  ariaMax?: number\n}\n\nconst ProgressBar = ({ progress, title, ariaMax }: ProgressBarProps) => (\n  <div className=\"progress mt-1\">\n    <div\n      className=\"progress-bar\"\n      role=\"progressbar\"\n      style={{ width: `${progress}%` }}\n      aria-valuenow={progress}\n      aria-valuemin={0}\n      aria-valuemax={ariaMax}\n    >\n      {`${progress}% ${title}`}\n    </div>\n  </div>\n)\n\nProgressBar.propTypes = {\n  progress: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  ariaMax: PropTypes.number,\n}\n\nProgressBar.defaultProps = {\n  title: '',\n  ariaMax: 100,\n}\n\nexport default ProgressBar\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { Appearance, Image, Powerstats } from 'interfaces/Hero.interface'\nimport ProgressBar from './ProgressBar'\n\ninterface CardProps {\n  alignment: string\n  appearance: Appearance | any\n  fullName: string\n  image: Image\n  name: string\n  powerstats: Powerstats\n  showAppearance?: boolean\n  showPowerStats?: boolean\n}\n\nconst index = (props: CardProps) => {\n  const {\n    alignment,\n    appearance,\n    fullName,\n    image,\n    name,\n    powerstats,\n    showAppearance = false,\n    showPowerStats = false,\n  } = props\n  return (\n    <div className=\"card p-3 mb-2\">\n      <div className=\"d-flex justify-content-between\">\n        <div className=\"d-flex flex-row align-items-center\">\n          <div className=\"avatar\">\n            <img className=\"img-fluid\" src={image.url} alt={`${name}.profile`} />\n          </div>\n          <div className=\"ms-2 c-details\">\n            <h6 className=\"mb-0\">{name}</h6> <span>{fullName}</span>\n          </div>\n        </div>\n        <div className={`alignment-container fst-italic ${alignment === 'good' ? 'text-success' : 'text-warning'}`}>\n          {' '}\n          <span>{alignment}</span>{' '}\n        </div>\n      </div>\n      {showPowerStats && (\n        <div>\n          <div className=\"mt-3\">\n            <span>Combate:</span> <ProgressBar progress={Number(powerstats.combat) || 0} />\n            <span>Durabilidad:</span> <ProgressBar progress={Number(powerstats.durability) || 0} ariaMax={80} />\n            <span>Inteligencia:</span> <ProgressBar progress={Number(powerstats.intelligence) || 0} ariaMax={80} />\n            <span>Poder:</span> <ProgressBar progress={Number(powerstats.power) || 0} ariaMax={80} />\n            <span>Velocidad:</span> <ProgressBar progress={Number(powerstats.speed) || 0} ariaMax={80} />\n            <span>Fuerza:</span> <ProgressBar progress={Number(powerstats.strength) || 0} ariaMax={80} />\n          </div>\n        </div>\n      )}\n      {showAppearance && (\n        <div className=\"mt-3\">\n          <hr />\n          <h5 className=\"text-primary\">Apariencia</h5>\n          <table className=\"table table-sm\">\n            <tbody>\n              <tr>\n                <td className=\"fst-italic\">Genero</td>\n                <td className=\"fw-light\">{appearance.gender}</td>\n              </tr>\n              <tr>\n                <td className=\"fst-italic\">Raza</td>\n                <td className=\"fw-light\">{appearance.race}</td>\n              </tr>\n              <tr>\n                <td className=\"fst-italic\">Altura</td>\n                <td className=\"fw-light\">{appearance.height[1]}</td>\n              </tr>\n              <tr>\n                <td className=\"fst-italic\">Peso</td>\n                <td className=\"fw-light\">{appearance.weight[1]}</td>\n              </tr>\n              <tr>\n                <td className=\"fst-italic\">Color de ojos</td>\n                <td className=\"fw-light\">{appearance['eye-color']}</td>\n              </tr>\n              <tr>\n                <td className=\"fst-italic\">Color de pelo</td>\n                <td className=\"fw-light\">{appearance['hair-color']}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default index\n"],"sourceRoot":""}